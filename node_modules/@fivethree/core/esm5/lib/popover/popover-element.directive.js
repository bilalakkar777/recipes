/**
 * @fileoverview added by tsickle
 * Generated from: lib/popover/popover-element.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivPopover } from './popover.component';
import { Directive, ElementRef, Input } from '@angular/core';
import { tap, delay } from 'rxjs/operators';
var PopoverElementDirective = /** @class */ (function () {
    function PopoverElementDirective(el) {
        this.el = el;
        this.delay = 50;
    }
    Object.defineProperty(PopoverElementDirective.prototype, "show", {
        get: /**
         * @return {?}
         */
        function () {
            return this._show;
        },
        set: /**
         * @param {?} visible
         * @return {?}
         */
        function (visible) {
            var _this = this;
            this._show = visible;
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (_this.show) {
                    _this.fivPopover.open(_this.el);
                }
                else if (_this.fivPopover.overlay && _this.fivPopover.overlay.open) {
                    _this.fivPopover.close();
                }
            }), 0);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PopoverElementDirective.prototype.open = /**
     * @return {?}
     */
    function () {
        this.show = true;
    };
    /**
     * @return {?}
     */
    PopoverElementDirective.prototype.close = /**
     * @return {?}
     */
    function () {
        this.show = false;
    };
    /**
     * @return {?}
     */
    PopoverElementDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.fivPopover.overlay.afterInit
            .pipe(delay(this.delay), tap((/**
         * @return {?}
         */
        function () {
            _this.show = _this._show;
        })))
            .subscribe();
    };
    PopoverElementDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[fivPopover]',
                    exportAs: 'fivPopover'
                },] }
    ];
    /** @nocollapse */
    PopoverElementDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PopoverElementDirective.propDecorators = {
        delay: [{ type: Input, args: ['fivPopover.delay',] }],
        fivPopover: [{ type: Input }],
        show: [{ type: Input, args: ['fivPopover.show',] }]
    };
    return PopoverElementDirective;
}());
export { PopoverElementDirective };
if (false) {
    /** @type {?} */
    PopoverElementDirective.prototype._show;
    /** @type {?} */
    PopoverElementDirective.prototype.delay;
    /** @type {?} */
    PopoverElementDirective.prototype.fivPopover;
    /**
     * @type {?}
     * @private
     */
    PopoverElementDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1lbGVtZW50LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXZldGhyZWUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9wb3BvdmVyL3BvcG92ZXItZWxlbWVudC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTVDO0lBdUJFLGlDQUFvQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQWpCUCxVQUFLLEdBQUcsRUFBRSxDQUFDO0lBaUJELENBQUM7SUFkdEMsc0JBQThCLHlDQUFJOzs7O1FBVWxDO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7Ozs7O1FBWkQsVUFBbUMsT0FBZ0I7WUFBbkQsaUJBU0M7WUFSQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztZQUNyQixVQUFVOzs7WUFBQztnQkFDVCxJQUFJLEtBQUksQ0FBQyxJQUFJLEVBQUU7b0JBQ2IsS0FBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUMvQjtxQkFBTSxJQUFJLEtBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxJQUFJLEtBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRTtvQkFDbEUsS0FBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztpQkFDekI7WUFDSCxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7UUFDUixDQUFDOzs7T0FBQTs7OztJQU9ELHNDQUFJOzs7SUFBSjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Ozs7SUFDRCx1Q0FBSzs7O0lBQUw7UUFDRSxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7O0lBRUQsaURBQWU7OztJQUFmO1FBQUEsaUJBU0M7UUFSQyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxTQUFTO2FBQzlCLElBQUksQ0FDSCxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUNqQixHQUFHOzs7UUFBQztZQUNGLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQztRQUN6QixDQUFDLEVBQUMsQ0FDSDthQUNBLFNBQVMsRUFBRSxDQUFDO0lBQ2pCLENBQUM7O2dCQXpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGNBQWM7b0JBQ3hCLFFBQVEsRUFBRSxZQUFZO2lCQUN2Qjs7OztnQkFObUIsVUFBVTs7O3dCQVMzQixLQUFLLFNBQUMsa0JBQWtCOzZCQUN4QixLQUFLO3VCQUVMLEtBQUssU0FBQyxpQkFBaUI7O0lBaUMxQiw4QkFBQztDQUFBLEFBMUNELElBMENDO1NBdENZLHVCQUF1Qjs7O0lBQ2xDLHdDQUFlOztJQUNmLHdDQUFzQzs7SUFDdEMsNkNBQWdDOzs7OztJQWdCcEIscUNBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRml2UG9wb3ZlciB9IGZyb20gJy4vcG9wb3Zlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGFwLCBkZWxheSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2ZpdlBvcG92ZXJdJyxcbiAgZXhwb3J0QXM6ICdmaXZQb3BvdmVyJ1xufSlcbmV4cG9ydCBjbGFzcyBQb3BvdmVyRWxlbWVudERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBfc2hvdzogYm9vbGVhbjtcbiAgQElucHV0KCdmaXZQb3BvdmVyLmRlbGF5JykgZGVsYXkgPSA1MDtcbiAgQElucHV0KCkgZml2UG9wb3ZlcjogRml2UG9wb3ZlcjtcblxuICBASW5wdXQoJ2ZpdlBvcG92ZXIuc2hvdycpIHNldCBzaG93KHZpc2libGU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zaG93ID0gdmlzaWJsZTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICh0aGlzLnNob3cpIHtcbiAgICAgICAgdGhpcy5maXZQb3BvdmVyLm9wZW4odGhpcy5lbCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZml2UG9wb3Zlci5vdmVybGF5ICYmIHRoaXMuZml2UG9wb3Zlci5vdmVybGF5Lm9wZW4pIHtcbiAgICAgICAgdGhpcy5maXZQb3BvdmVyLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSwgMCk7XG4gIH1cbiAgZ2V0IHNob3coKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3c7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgfVxuICBjbG9zZSgpIHtcbiAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmZpdlBvcG92ZXIub3ZlcmxheS5hZnRlckluaXRcbiAgICAgIC5waXBlKFxuICAgICAgICBkZWxheSh0aGlzLmRlbGF5KSxcbiAgICAgICAgdGFwKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnNob3cgPSB0aGlzLl9zaG93O1xuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=