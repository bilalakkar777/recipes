/**
 * @fileoverview added by tsickle
 * Generated from: lib/overlay/overlay-content/overlay-content.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var FivOverlayContent = /** @class */ (function () {
    function FivOverlayContent(sanitizer) {
        this.sanitizer = sanitizer;
    }
    Object.defineProperty(FivOverlayContent.prototype, "myStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.priority
                ? this.sanitizer.bypassSecurityTrustStyle("z-index: " + this.priority)
                : null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivOverlayContent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    FivOverlayContent.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-overlay-content',
                    template: "<ng-content #content></ng-content>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FivOverlayContent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    FivOverlayContent.propDecorators = {
        myStyle: [{ type: HostBinding, args: ['style',] }]
    };
    return FivOverlayContent;
}());
export { FivOverlayContent };
if (false) {
    /** @type {?} */
    FivOverlayContent.prototype.priority;
    /**
     * @type {?}
     * @private
     */
    FivOverlayContent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXZldGhyZWUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9vdmVybGF5L292ZXJsYXktY29udGVudC9vdmVybGF5LWNvbnRlbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxXQUFXLEVBTVosTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFhLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRXBFO0lBZUUsMkJBQW9CLFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7SUFBRyxDQUFDO0lBVC9DLHNCQUNJLHNDQUFPOzs7O1FBRFg7WUFFRSxPQUFPLElBQUksQ0FBQyxRQUFRO2dCQUNsQixDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyx3QkFBd0IsQ0FBQyxjQUFZLElBQUksQ0FBQyxRQUFVLENBQUM7Z0JBQ3RFLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDWCxDQUFDOzs7T0FBQTs7OztJQU1ELG9DQUFROzs7SUFBUixjQUFZLENBQUM7O2dCQWpCZCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsOENBQStDOztpQkFFaEQ7Ozs7Z0JBTm1CLFlBQVk7OzswQkFRN0IsV0FBVyxTQUFDLE9BQU87O0lBWXRCLHdCQUFDO0NBQUEsQUFsQkQsSUFrQkM7U0FiWSxpQkFBaUI7OztJQVE1QixxQ0FBaUI7Ozs7O0lBRUwsc0NBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIEhvc3RCaW5kaW5nLFxuICBBZnRlclZpZXdJbml0LFxuICBFdmVudEVtaXR0ZXIsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIEFmdGVyQ29udGVudENoZWNrZWQsXG4gIEFmdGVyVmlld0NoZWNrZWRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTYWZlU3R5bGUsIERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmaXYtb3ZlcmxheS1jb250ZW50JyxcbiAgdGVtcGxhdGVVcmw6ICcuL292ZXJsYXktY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL292ZXJsYXktY29udGVudC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZpdk92ZXJsYXlDb250ZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQEhvc3RCaW5kaW5nKCdzdHlsZScpXG4gIGdldCBteVN0eWxlKCk6IFNhZmVTdHlsZSB7XG4gICAgcmV0dXJuIHRoaXMucHJpb3JpdHlcbiAgICAgID8gdGhpcy5zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFN0eWxlKGB6LWluZGV4OiAke3RoaXMucHJpb3JpdHl9YClcbiAgICAgIDogbnVsbDtcbiAgfVxuXG4gIHByaW9yaXR5OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzYW5pdGl6ZXI6IERvbVNhbml0aXplcikge31cblxuICBuZ09uSW5pdCgpIHt9XG59XG4iXX0=