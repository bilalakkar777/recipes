/**
 * @fileoverview added by tsickle
 * Generated from: lib/app-bar/app-bar-tab/app-bar-tab.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Host, HostBinding, ElementRef } from '@angular/core';
import { Router } from '@angular/router';
import { FivAppBar } from '../app-bar.component';
var FivAppBarTab = /** @class */ (function () {
    function FivAppBarTab(appBar, router, el) {
        this.appBar = appBar;
        this.router = router;
        this.el = el;
        this.type = 'unbounded';
        this.badge = -1;
    }
    Object.defineProperty(FivAppBarTab.prototype, "active", {
        get: /**
         * @return {?}
         */
        function () {
            return this.router.url.endsWith(this.href);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivAppBarTab.prototype, "classes", {
        get: /**
         * @return {?}
         */
        function () {
            return "label-" + this.appBar.titleLayout;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivAppBarTab.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FivAppBarTab.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.appBar.ionTabButtonClick({
            tab: this.tab,
            href: this.href,
            selected: true
        });
    };
    FivAppBarTab.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-app-bar-tab',
                    template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n\n<div (click)=\"onClick()\" class=\"tab ion-activatable\" [ngClass]=\"{'active': active}\">\n  <ng-content select=\"fiv-icon\"></ng-content>\n  <ng-content *ngIf=\"appBar.titleLayout === 'show' || (active && appBar.titleLayout === 'active-only')\"\n    select=\"ion-label\"></ng-content>\n  <ion-ripple-effect [type]=\"type\"></ion-ripple-effect>\n</div>",
                    styles: [":host{width:50%;height:100%;display:inline-block;position:relative}:host .tab{width:100%;height:100%;display:flex;position:relative;flex-direction:column;align-items:center;justify-content:center;overflow:visible}:host .tab.active{--fiv-color-icon:var(--ion-color-primary)}:host .tab.active ::ng-deep ion-label{color:var(--ion-color-primary)}:host(.label-hide) ::ng-deep ion-label{display:none}:host(.label-active-only) .tab:not(.active) ::ng-deep ion-label{display:none}"]
                }] }
    ];
    /** @nocollapse */
    FivAppBarTab.ctorParameters = function () { return [
        { type: FivAppBar, decorators: [{ type: Host }] },
        { type: Router },
        { type: ElementRef }
    ]; };
    FivAppBarTab.propDecorators = {
        name: [{ type: Input }],
        tab: [{ type: Input }],
        href: [{ type: Input }],
        type: [{ type: Input }],
        badge: [{ type: Input }],
        classes: [{ type: HostBinding, args: ['class',] }]
    };
    return FivAppBarTab;
}());
export { FivAppBarTab };
if (false) {
    /** @type {?} */
    FivAppBarTab.prototype.name;
    /** @type {?} */
    FivAppBarTab.prototype.tab;
    /** @type {?} */
    FivAppBarTab.prototype.href;
    /** @type {?} */
    FivAppBarTab.prototype.type;
    /** @type {?} */
    FivAppBarTab.prototype.badge;
    /** @type {?} */
    FivAppBarTab.prototype.appBar;
    /** @type {?} */
    FivAppBarTab.prototype.router;
    /** @type {?} */
    FivAppBarTab.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWJhci10YWIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL2FwcC1iYXIvYXBwLWJhci10YWIvYXBwLWJhci10YWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsSUFBSSxFQUNKLFdBQVcsRUFDWCxVQUFVLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVqRDtJQW9CRSxzQkFDaUIsTUFBaUIsRUFDekIsTUFBYyxFQUNkLEVBQWM7UUFGTixXQUFNLEdBQU4sTUFBTSxDQUFXO1FBQ3pCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBZGQsU0FBSSxHQUE0QixXQUFXLENBQUM7UUFDNUMsVUFBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBY2pCLENBQUM7SUFaSixzQkFBSSxnQ0FBTTs7OztRQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLENBQUM7OztPQUFBO0lBRUQsc0JBQTBCLGlDQUFPOzs7O1FBQWpDO1lBQ0UsT0FBTyxXQUFTLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBYSxDQUFDO1FBQzVDLENBQUM7OztPQUFBOzs7O0lBUUQsK0JBQVE7OztJQUFSLGNBQVksQ0FBQzs7OztJQUViLDhCQUFPOzs7SUFBUDtRQUNFLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUM7WUFDNUIsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHO1lBQ2IsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsUUFBUSxFQUFFLElBQUk7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDOztnQkFsQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLDJhQUEyQzs7aUJBRTVDOzs7O2dCQU5RLFNBQVMsdUJBdUJiLElBQUk7Z0JBeEJBLE1BQU07Z0JBRmIsVUFBVTs7O3VCQVdULEtBQUs7c0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3VCQUNMLEtBQUs7d0JBQ0wsS0FBSzswQkFNTCxXQUFXLFNBQUMsT0FBTzs7SUFtQnRCLG1CQUFDO0NBQUEsQUFuQ0QsSUFtQ0M7U0E5QlksWUFBWTs7O0lBQ3ZCLDRCQUFzQjs7SUFDdEIsMkJBQXFCOztJQUNyQiw0QkFBc0I7O0lBQ3RCLDRCQUFxRDs7SUFDckQsNkJBQW9COztJQVdsQiw4QkFBZ0M7O0lBQ2hDLDhCQUFxQjs7SUFDckIsMEJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIElucHV0LFxuICBIb3N0LFxuICBIb3N0QmluZGluZyxcbiAgRWxlbWVudFJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBGaXZBcHBCYXIgfSBmcm9tICcuLi9hcHAtYmFyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zpdi1hcHAtYmFyLXRhYicsXG4gIHRlbXBsYXRlVXJsOiAnLi9hcHAtYmFyLXRhYi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FwcC1iYXItdGFiLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRml2QXBwQmFyVGFiIGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSB0YWI6IHN0cmluZztcbiAgQElucHV0KCkgaHJlZjogc3RyaW5nO1xuICBASW5wdXQoKSB0eXBlOiAnYm91bmRlZCcgfCAndW5ib3VuZGVkJyA9ICd1bmJvdW5kZWQnO1xuICBASW5wdXQoKSBiYWRnZSA9IC0xO1xuXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMucm91dGVyLnVybC5lbmRzV2l0aCh0aGlzLmhyZWYpO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGdldCBjbGFzc2VzKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGBsYWJlbC0ke3RoaXMuYXBwQmFyLnRpdGxlTGF5b3V0fWA7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpIHB1YmxpYyBhcHBCYXI6IEZpdkFwcEJhcixcbiAgICBwdWJsaWMgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHVibGljIGVsOiBFbGVtZW50UmVmXG4gICkge31cblxuICBuZ09uSW5pdCgpIHt9XG5cbiAgb25DbGljaygpIHtcbiAgICB0aGlzLmFwcEJhci5pb25UYWJCdXR0b25DbGljayh7XG4gICAgICB0YWI6IHRoaXMudGFiLFxuICAgICAgaHJlZjogdGhpcy5ocmVmLFxuICAgICAgc2VsZWN0ZWQ6IHRydWVcbiAgICB9KTtcbiAgfVxufVxuIl19