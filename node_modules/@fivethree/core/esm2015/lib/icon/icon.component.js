/**
 * @fileoverview added by tsickle
 * Generated from: lib/icon/icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';
import { trigger, transition, animate, state, style } from '@angular/animations';
export class FivIcon {
    constructor() {
        this._badge = 0;
        this.state = 'normal';
        this.off = false;
        this.transitionDone = new EventEmitter();
        this.indicatorState = 'scale';
        this.badgeState = 'scale';
    }
    /**
     * @return {?}
     */
    get name() {
        return this._name;
    }
    /**
     * @param {?} name
     * @return {?}
     */
    set name(name) {
        if (this._name) {
            this.transform(name);
        }
        else {
            this._name = name;
        }
    }
    /**
     * @return {?}
     */
    get badge() {
        return this._badge;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set badge(value) {
        this.transformIndicator(value);
    }
    /**
     * @param {?} dotVisible
     * @return {?}
     */
    set dotVisible(dotVisible) {
        this._dotVisible = dotVisible;
        if (dotVisible) {
            this.indicatorState = 'normal';
        }
    }
    /**
     * @return {?}
     */
    get dotVisible() {
        return this._dotVisible;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} name
     * @return {?}
     */
    transform(name) {
        this.temp = name;
        this.state = 'rotate';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    transformIndicator(value) {
        if (this.dotVisible) {
            this._badge = value;
            return;
        }
        if (value === 0) {
            this._badge = value;
            this.indicatorState = 'normal';
            this.badgeState = 'scale';
        }
        else {
            this.indicatorState = 'scale';
            if (this.badgeState === 'scale') {
                this.badgeState = 'normal';
                this._badge = value;
            }
            else {
                this.tempValue = value;
                this.badgeState = 'scale';
            }
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    rotateAnimDone(event) {
        if (event.fromState === 'normal' && event.toState === 'rotate') {
            this._name = this.temp;
            this.state = 'normal';
        }
        if (event.fromState === 'rotate' && event.toState === 'normal') {
            this.transitionDone.emit(this._name);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    incrementDone(event) {
        if (event.fromState === 'normal' && event.toState === 'scale') {
            if (this.tempValue > 0) {
                this.badgeState = 'normal';
                this._badge = this.tempValue;
            }
            else {
                this._badge = this.tempValue;
            }
        }
    }
}
FivIcon.decorators = [
    { type: Component, args: [{
                selector: 'fiv-icon',
                template: "<ion-icon [slot]=\"slot\" [@rotateAnim]=\"state\" (@rotateAnim.done)=\"rotateAnimDone($event)\" [name]=\"_name\"\n    [color]=\"color\"></ion-icon>\n<span [@scaleAnim]=\"indicatorState\" *ngIf=\"dotVisible\" class=\"indicator\"></span>\n<span *ngIf=\"_badge > 0 || dotVisible\" class=\"indicator-background\"></span>\n<span class=\"off-background\" *ngIf=\"off\"></span>\n<span class=\"off\" *ngIf=\"off\"></span>\n<span *ngIf=\"smallIcon && badge == 0 && !dotVisible\" class=\"indicator-icon\">\n    <ion-icon [color]=\"color\" slot=\"icon-only\" [name]=\"smallIcon\"></ion-icon>\n</span>\n<span *ngIf=\"badge > 0 && !dotVisible\" [@scaleAnim]=\"badgeState\" (@scaleAnim.done)=\"incrementDone($event)\"\n    class=\"indicator-value\">\n    <span *ngIf=\"badge <= 9\">{{badge}}</span>\n    <span *ngIf=\"badge > 9\">9+</span>\n</span>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: [
                    trigger('rotateAnim', [
                        transition('normal => rotate', [animate('125ms ease-out')]),
                        transition('rotate => normal', [animate('125ms ease-in')]),
                        state('rotate', style({ opacity: '0', transform: 'scale(0) rotateZ(45deg)' })),
                        state('normal', style({ opacity: '1', transform: 'scale(1) rotateZ(0deg)' }))
                    ]),
                    trigger('scaleAnim', [
                        transition('void => normal', [
                            style({ opacity: '0', transform: 'scale(0)' }),
                            animate('125ms ease-out', style({ opacity: '1', transform: 'scale(1)' }))
                        ]),
                        transition('normal => scale', [animate('125ms ease-out')]),
                        transition('scale => normal', [animate('125ms ease-in')]),
                        state('scale', style({ opacity: '0', transform: 'scale(0)' })),
                        state('normal', style({ opacity: '1', transform: 'scale(1)' }))
                    ])
                ],
                styles: [":host{--fiv-padding-end:0;--fiv-padding-start:0;--fiv-dot-right:-6px;--fiv-dot-top:-2px;--fiv-color-icon:inherit;--fiv-icon-height:inherit;--fiv-icon-width:inherit;position:relative;display:inline-block}ion-icon{margin:0;font-size:1.8em;color:var(--fiv-color-icon);padding-right:var(--fiv-padding-end);padding-left:var(--fiv-padding-start);height:var(--fiv-icon-height,28px);width:var(--fiv-icon-width,28px)}.indicator{position:absolute;width:var(--fiv-dot-width,8px);height:var(--fiv-dot-height,8px);background-color:var(--fiv-dot-color,var(--fiv-color-indicator,--ion-color-primary));top:calc(var(--fiv-dot-top,0px) + 3px);border-radius:100%;right:calc(var(--fiv-dot-right,4px) + 3px);z-index:12}.indicator-value{position:absolute;min-width:var(--fiv-dot-width,14px);height:var(--fiv-dot-height,14px);background-color:var(--fiv-dot-color,var(--ion-color-primary));color:var(--fiv-dot-color-background,var(--ion-color-light));top:var(--fiv-dot-top,0);border-radius:14px;right:var(--fiv-dot-right,4px);z-index:13}.indicator-value *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:.6em}.indicator-icon{position:absolute;min-width:var(--fiv-dot-width,14px);height:var(--fiv-dot-height,14px);background-color:var(--fiv-dot-color-background,#fff);top:0;border-radius:14px;right:0;z-index:13}.indicator-icon *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:1em}.indicator-background{position:absolute;width:var(--fiv-dot-width,18px);height:var(--fiv-dot-height,18px);background-color:var(--fiv-dot-color-background,var(--ion-color-light));top:calc(var(--fiv-dot-top,0px) - 2px);border-radius:100%;right:calc(var(--fiv-dot-right,4px) - 2px);z-index:11}.off{width:120%;height:2px;background:var(--fiv-color-icon);position:absolute;left:0;transform:rotateZ(45deg) translateY(10px) translateX(6px)}.off-background{width:120%;height:2px;background:#000;position:absolute;background-color:var(--fiv-dot-color-background,var(--ion-color-light));left:2px;transform:rotateZ(45deg) translateY(10px) translateX(6px)}"]
            }] }
];
/** @nocollapse */
FivIcon.ctorParameters = () => [];
FivIcon.propDecorators = {
    color: [{ type: Input }],
    slot: [{ type: Input }],
    smallIcon: [{ type: Input }],
    off: [{ type: Input }],
    transitionDone: [{ type: Output }],
    name: [{ type: Input }],
    badge: [{ type: Input }],
    dotVisible: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FivIcon.prototype._name;
    /** @type {?} */
    FivIcon.prototype._badge;
    /** @type {?} */
    FivIcon.prototype.tempValue;
    /** @type {?} */
    FivIcon.prototype.state;
    /** @type {?} */
    FivIcon.prototype.temp;
    /** @type {?} */
    FivIcon.prototype.color;
    /** @type {?} */
    FivIcon.prototype.slot;
    /** @type {?} */
    FivIcon.prototype.smallIcon;
    /** @type {?} */
    FivIcon.prototype.off;
    /** @type {?} */
    FivIcon.prototype.transitionDone;
    /** @type {?} */
    FivIcon.prototype.indicatorState;
    /** @type {?} */
    FivIcon.prototype.badgeState;
    /** @type {?} */
    FivIcon.prototype._dotVisible;
}
//# sourceMappingURL=data:application/json;base64,