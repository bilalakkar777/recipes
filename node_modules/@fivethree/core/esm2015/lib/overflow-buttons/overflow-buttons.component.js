/**
 * @fileoverview added by tsickle
 * Generated from: lib/overflow-buttons/overflow-buttons.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { FivPopover } from './../popover/popover.component';
import { Platform, PopoverController, ActionSheetController } from '@ionic/angular';
import { Component, Input, ContentChildren, QueryList } from '@angular/core';
import { FivButton } from '../button/button.component';
export class FivOverflowButtons {
    /**
     * @param {?} platform
     * @param {?} popoverController
     * @param {?} actionSheetController
     */
    constructor(platform, popoverController, actionSheetController) {
        this.platform = platform;
        this.popoverController = popoverController;
        this.actionSheetController = actionSheetController;
        this.slot = 'end';
        this.icon = 'more';
        this.mode = 'popover';
        this.count = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterContentInit() { }
    /**
     * @param {?} event
     * @return {?}
     */
    onMenuClicked(event) {
        if (this.mode === 'action-sheet') {
            return this.presentActionSheet(event);
        }
        if (this.mode === 'popover') {
            return this.presentPopover(event);
        }
        if (this.platform.is('mobile')) {
            this.presentActionSheet(event);
        }
        else {
            this.presentPopover(event);
        }
    }
    /**
     * @param {?} ev
     * @return {?}
     */
    presentPopover(ev) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /** @type {?} */
            const popover = yield this.popoverController.create({
                component: FivPopover,
                event: ev,
                translucent: false,
                componentProps: {
                    buttons: this.buttons
                        .toArray()
                        .slice(this.count)
                        .filter((/**
                     * @param {?} button
                     * @return {?}
                     */
                    button => !button.disabled))
                }
            });
            yield popover.present();
            /** @type {?} */
            const result = yield popover.onDidDismiss();
            if (result &&
                result.data &&
                (result.data.index || result.data.index === 0)) {
                this.onButtonClicked(result.data.index + this.count);
            }
        });
    }
    /**
     * @param {?} ev
     * @return {?}
     */
    presentActionSheet(ev) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /** @type {?} */
            const buttons = [];
            this.buttons
                .toArray()
                .slice(this.count)
                .forEach((/**
             * @param {?} button
             * @param {?} index
             * @return {?}
             */
            (button, index) => {
                if (!button.disabled) {
                    buttons.push({
                        text: button.text,
                        icon: button.icon,
                        handler: (/**
                         * @return {?}
                         */
                        () => {
                            this.onButtonClicked(this.count + index);
                        })
                    });
                }
            }));
            /** @type {?} */
            const actionSheet = yield this.actionSheetController.create({
                buttons: buttons
            });
            yield actionSheet.present();
        });
    }
    /**
     * @param {?} i
     * @return {?}
     */
    onButtonClicked(i) {
        this.buttons.toArray()[i].click.emit();
    }
}
FivOverflowButtons.decorators = [
    { type: Component, args: [{
                selector: 'fiv-overflow-buttons',
                template: "<ion-buttons *ngIf=\"buttons\" [slot]=\"slot\">\n\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'start' || slot ==='primary') && count < buttons.length && text\"\n    (click)=\"onMenuClicked($event)\" [text]=\"text\"></fiv-button>\n\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'start' || slot ==='primary') && count < buttons.length && !text\"\n    (click)=\"onMenuClicked($event)\" [icon]=\"'md-more'\"></fiv-button>\n  <ng-container>\n    <fiv-button [color]=\"button.color\" (click)=\"onButtonClicked(i)\" [icon]=\"button.icon\"\n      *ngFor=\"let button of buttons.toArray() |\u00A0slice:0:count; let i = index;\"></fiv-button>\n  </ng-container>\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'end' || slot ==='secondary') && count < buttons.length && !text\"\n    (click)=\"onMenuClicked($event)\" [icon]=\"icon\"></fiv-button>\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'end' || slot ==='secondary') && count < buttons.length && text\"\n    (click)=\"onMenuClicked($event)\" [text]=\"text\"></fiv-button>\n</ion-buttons>",
                styles: [":host{display:block}"]
            }] }
];
/** @nocollapse */
FivOverflowButtons.ctorParameters = () => [
    { type: Platform },
    { type: PopoverController },
    { type: ActionSheetController }
];
FivOverflowButtons.propDecorators = {
    slot: [{ type: Input }],
    icon: [{ type: Input }],
    text: [{ type: Input }],
    mode: [{ type: Input }],
    color: [{ type: Input }],
    count: [{ type: Input }],
    buttons: [{ type: ContentChildren, args: [FivButton,] }]
};
if (false) {
    /** @type {?} */
    FivOverflowButtons.prototype.slot;
    /** @type {?} */
    FivOverflowButtons.prototype.icon;
    /** @type {?} */
    FivOverflowButtons.prototype.text;
    /** @type {?} */
    FivOverflowButtons.prototype.mode;
    /** @type {?} */
    FivOverflowButtons.prototype.color;
    /** @type {?} */
    FivOverflowButtons.prototype.count;
    /** @type {?} */
    FivOverflowButtons.prototype.buttons;
    /**
     * @type {?}
     * @private
     */
    FivOverflowButtons.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    FivOverflowButtons.prototype.popoverController;
    /** @type {?} */
    FivOverflowButtons.prototype.actionSheetController;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmZsb3ctYnV0dG9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZml2ZXRocmVlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvb3ZlcmZsb3ctYnV0dG9ucy9vdmVyZmxvdy1idXR0b25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUQsT0FBTyxFQUNMLFFBQVEsRUFDUixpQkFBaUIsRUFDakIscUJBQXFCLEVBQ3RCLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEIsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsZUFBZSxFQUNmLFNBQVMsRUFFVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFPdkQsTUFBTSxPQUFPLGtCQUFrQjs7Ozs7O0lBUzdCLFlBQ1UsUUFBa0IsRUFDbEIsaUJBQW9DLEVBQ3JDLHFCQUE0QztRQUYzQyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDckMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQVg1QyxTQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2IsU0FBSSxHQUFHLE1BQU0sQ0FBQztRQUVkLFNBQUksR0FBZ0QsU0FBUyxDQUFDO1FBRTlELFVBQUssR0FBRyxDQUFDLENBQUM7SUFPaEIsQ0FBQzs7OztJQUVKLFFBQVEsS0FBSSxDQUFDOzs7O0lBRWIsa0JBQWtCLEtBQVUsQ0FBQzs7Ozs7SUFFN0IsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLGNBQWMsRUFBRTtZQUNoQyxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN2QztRQUNELElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxTQUFTLEVBQUU7WUFDM0IsT0FB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Q3ZFLG1DQUF1Qjs7SUFDdkIsbUNBQW1COztJQUNuQixxQ0FBMEQ7Ozs7O0lBR3hELHNDQUEwQjs7Ozs7SUFDMUIsK0NBQTRDOztJQUM1QyxtREFBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaXZQb3BvdmVyIH0gZnJvbSAnLi8uLi9wb3BvdmVyL3BvcG92ZXIuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIFBsYXRmb3JtLFxuICBQb3BvdmVyQ29udHJvbGxlcixcbiAgQWN0aW9uU2hlZXRDb250cm9sbGVyXG59IGZyb20gJ0Bpb25pYy9hbmd1bGFyJztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBJbnB1dCxcbiAgQ29udGVudENoaWxkcmVuLFxuICBRdWVyeUxpc3QsXG4gIEFmdGVyQ29udGVudEluaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaXZCdXR0b24gfSBmcm9tICcuLi9idXR0b24vYnV0dG9uLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zpdi1vdmVyZmxvdy1idXR0b25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL292ZXJmbG93LWJ1dHRvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9vdmVyZmxvdy1idXR0b25zLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRml2T3ZlcmZsb3dCdXR0b25zIGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0IHtcbiAgQElucHV0KCkgc2xvdCA9ICdlbmQnO1xuICBASW5wdXQoKSBpY29uID0gJ21vcmUnO1xuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIG1vZGU6ICdwb3BvdmVyJyB8ICdhY3Rpb24tc2hlZXQnIHwgJ2JvdHRvbS1zaGVldCcgPSAncG9wb3Zlcic7XG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvdW50ID0gMDtcbiAgQENvbnRlbnRDaGlsZHJlbihGaXZCdXR0b24pIGJ1dHRvbnM6IFF1ZXJ5TGlzdDxGaXZCdXR0b24+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcGxhdGZvcm06IFBsYXRmb3JtLFxuICAgIHByaXZhdGUgcG9wb3ZlckNvbnRyb2xsZXI6IFBvcG92ZXJDb250cm9sbGVyLFxuICAgIHB1YmxpYyBhY3Rpb25TaGVldENvbnRyb2xsZXI6IEFjdGlvblNoZWV0Q29udHJvbGxlclxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7fVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkIHt9XG5cbiAgb25NZW51Q2xpY2tlZChldmVudCkge1xuICAgIGlmICh0aGlzLm1vZGUgPT09ICdhY3Rpb24tc2hlZXQnKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcmVzZW50QWN0aW9uU2hlZXQoZXZlbnQpO1xuICAgIH1cbiAgICBpZiAodGhpcy5tb2RlID09PSAncG9wb3ZlcicpIHtcbiAgICAgIHJldHVybiB0aGlzLnByZXNlbnRQb3BvdmVyKGV2ZW50KTtcbiAgICB9XG4gICAgaWYgKHRoaXMucGxhdGZvcm0uaXMoJ21vYmlsZScpKSB7XG4gICAgICB0aGlzLnByZXNlbnRBY3Rpb25TaGVldChldmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucHJlc2VudFBvcG92ZXIoZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHByZXNlbnRQb3BvdmVyKGV2OiBhbnkpIHtcbiAgICBjb25zdCBwb3BvdmVyID0gYXdhaXQgdGhpcy5wb3BvdmVyQ29udHJvbGxlci5jcmVhdGUoe1xuICAgICAgY29tcG9uZW50OiBGaXZQb3BvdmVyLFxuICAgICAgZXZlbnQ6IGV2LFxuICAgICAgdHJhbnNsdWNlbnQ6IGZhbHNlLFxuICAgICAgY29tcG9uZW50UHJvcHM6IHtcbiAgICAgICAgYnV0dG9uczogdGhpcy5idXR0b25zXG4gICAgICAgICAgLnRvQXJyYXkoKVxuICAgICAgICAgIC5zbGljZSh0aGlzLmNvdW50KVxuICAgICAgICAgIC5maWx0ZXIoYnV0dG9uID0+ICFidXR0b24uZGlzYWJsZWQpXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBhd2FpdCBwb3BvdmVyLnByZXNlbnQoKTtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwb3BvdmVyLm9uRGlkRGlzbWlzcygpO1xuICAgIGlmIChcbiAgICAgIHJlc3VsdCAmJlxuICAgICAgcmVzdWx0LmRhdGEgJiZcbiAgICAgIChyZXN1bHQuZGF0YS5pbmRleCB8fCByZXN1bHQuZGF0YS5pbmRleCA9PT0gMClcbiAgICApIHtcbiAgICAgIHRoaXMub25CdXR0b25DbGlja2VkKHJlc3VsdC5kYXRhLmluZGV4ICsgdGhpcy5jb3VudCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgcHJlc2VudEFjdGlvblNoZWV0KGV2OiBhbnkpIHtcbiAgICBjb25zdCBidXR0b25zID0gW107XG4gICAgdGhpcy5idXR0b25zXG4gICAgICAudG9BcnJheSgpXG4gICAgICAuc2xpY2UodGhpcy5jb3VudClcbiAgICAgIC5mb3JFYWNoKChidXR0b24sIGluZGV4KSA9PiB7XG4gICAgICAgIGlmICghYnV0dG9uLmRpc2FibGVkKSB7XG4gICAgICAgICAgYnV0dG9ucy5wdXNoKHtcbiAgICAgICAgICAgIHRleHQ6IGJ1dHRvbi50ZXh0LFxuICAgICAgICAgICAgaWNvbjogYnV0dG9uLmljb24sXG4gICAgICAgICAgICBoYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMub25CdXR0b25DbGlja2VkKHRoaXMuY291bnQgKyBpbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIGNvbnN0IGFjdGlvblNoZWV0ID0gYXdhaXQgdGhpcy5hY3Rpb25TaGVldENvbnRyb2xsZXIuY3JlYXRlKHtcbiAgICAgIGJ1dHRvbnM6IGJ1dHRvbnNcbiAgICB9KTtcbiAgICBhd2FpdCBhY3Rpb25TaGVldC5wcmVzZW50KCk7XG4gIH1cblxuICBvbkJ1dHRvbkNsaWNrZWQoaTogbnVtYmVyKSB7XG4gICAgdGhpcy5idXR0b25zLnRvQXJyYXkoKVtpXS5jbGljay5lbWl0KCk7XG4gIH1cbn1cbiJdfQ==