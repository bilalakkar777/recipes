/**
 * @fileoverview added by tsickle
 * Generated from: lib/feature-discovery/feature-discovery.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Platform } from '@ionic/angular';
import { Component, ViewChild, ElementRef, Renderer2, Output, EventEmitter } from '@angular/core';
import { trigger, transition, animate, style } from '@angular/animations';
export class FivFeatureDiscovery {
    /**
     * @param {?} renderer
     * @param {?} platform
     */
    constructor(renderer, platform) {
        this.renderer = renderer;
        this.platform = platform;
        this.top = 0;
        this.left = 0;
        this.width = 420;
        this.height = 420;
        this.innerDiameter = 0;
        this.featurePadding = 0;
        this.contentTop = 0;
        this.contentLeft = 0;
        this.contentWidth = 0;
        this.contentHeight = 0;
        this.contentOffset = 0;
        this.animationState = 'hidden';
        this.pulse = 'small';
        this.fivClick = new EventEmitter();
        this.fivBackdropClick = new EventEmitter();
        this.fivClose = new EventEmitter();
        this.fivOpen = new EventEmitter();
        this.fivAnimation = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterContentInit() { }
    /**
     * @param {?} bounds
     * @return {?}
     */
    setBounds(bounds) {
        this.bounds = bounds;
        this.innerDiameter =
            bounds.height > bounds.width ? bounds.height : bounds.width;
        this.top = bounds.top + bounds.height / 2 - this.height / 2;
        this.left = bounds.left + bounds.width / 2 - this.width / 2;
        this.calculateContentBounds();
        if (!this.icon) {
            /** @type {?} */
            const gradient = `-webkit-radial-gradient(transparent ${this
                .innerDiameter /
                2 +
                5}px, var(--fiv-color-feature) ${this.innerDiameter / 2 + 5}px)`;
            /** @type {?} */
            const pulseGradient = `-webkit-radial-gradient(transparent ${this
                .innerDiameter /
                2 +
                5}px, var(--fiv-color-pulse) ${this.innerDiameter / 2 + 5}px)`;
            this.renderer.setStyle(this.circle.nativeElement, 'background', gradient);
            this.renderer.setStyle(this.innerPulse.nativeElement, 'background', pulseGradient);
            this.renderer.setStyle(this.outerPulse.nativeElement, 'background', pulseGradient);
        }
    }
    /**
     * @return {?}
     */
    calculateContentBounds() {
        /** @type {?} */
        const absoluteCenter = {
            x: this.platform.width() / 2,
            y: this.platform.height() / 2
        };
        /** @type {?} */
        const center = {
            x: this.left + this.width / 2,
            y: this.top + this.width / 2
        };
        /** @type {?} */
        const rectWidth = Math.sqrt(Math.pow(this.width, 2) / 2);
        /** @type {?} */
        const isTop = center.y < absoluteCenter.y;
        /** @type {?} */
        const isLeft = center.x < absoluteCenter.x;
        /** @type {?} */
        const innerRadius = this.innerDiameter / 2;
        /** @type {?} */
        const padding = this.featurePadding / 2;
        /** @type {?} */
        let contentRight = 0;
        /** @type {?} */
        let contentBottom = 0;
        if (isLeft) {
            this.contentLeft = center.x - innerRadius;
            contentRight = Math.min(center.x + rectWidth / 2 + this.contentOffset, this.platform.width());
        }
        else {
            this.contentLeft = Math.max(center.x - rectWidth / 2 - this.contentOffset, 0);
            contentRight = center.x + innerRadius;
        }
        if (isTop) {
            this.contentTop = center.y + innerRadius + padding;
            contentBottom = center.y + rectWidth / 2 + -1 * this.contentOffset;
        }
        else {
            this.contentTop = center.y - rectWidth / 2 + this.contentOffset;
            contentBottom = center.y - innerRadius - padding;
        }
        this.contentWidth = Math.abs(this.contentLeft - contentRight);
        this.contentHeight = Math.abs(this.contentTop - contentBottom);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleCircleAnimation(event) {
        this.fivAnimation.emit(event);
        if (event.toState === 'visible') {
            this.fivOpen.emit();
        }
        if (event.fromState === 'visible' && event.toState === 'hidden') {
            this.fivClose.emit();
        }
        if (event.fromState === 'visible' && event.toState === 'execute') {
            this.fivClose.emit();
        }
    }
    /**
     * @return {?}
     */
    show() {
        this.animationState = 'visible';
    }
    /**
     * @return {?}
     */
    hide() {
        this.animationState = 'hidden';
    }
    /**
     * @return {?}
     */
    featureClick() {
        this.animationState = 'execute';
    }
    /**
     * @param {?} icon
     * @return {?}
     */
    setIcon(icon) {
        if (icon) {
            this.icon = icon.name;
        }
    }
}
FivFeatureDiscovery.decorators = [
    { type: Component, args: [{
                selector: 'fiv-feature-discovery',
                template: "<div class=\"backdrop\" (click)=\"fivBackdropClick.emit()\"></div>\n<div [@scale]=\"animationState\" (@scale.done)=\"handleCircleAnimation($event)\" #circle class=\"circle\"\n  [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\" [style.top]=\"top + 'px'\" [style.left]=\"left + 'px'\">\n  <div #pOuter class=\"feature center pulse\" [style.height]=\"(innerDiameter + featurePadding) + 'px'\"\n    [style.width]=\"(innerDiameter + featurePadding) + 'px'\">\n  </div>\n  <div #pInner class=\"feature center inner  ion-activatable\" (click)=\"fivClick.emit()\"\n    [style.height]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\"\n    [style.width]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\">\n    <fiv-icon class=\"center\" *ngIf=\"icon\" [name]=\"icon\"></fiv-icon>\n    <ion-ripple-effect type=\"unbounded\"></ion-ripple-effect>\n  </div>\n</div>\n<div class=\"content\" *ngIf=\"animationState === 'visible'\" [@contentAnim] [style.width]=\"contentWidth + 'px'\"\n  [style.height]=\"contentHeight + 'px'\" [style.top]=\"contentTop + 'px'\" [style.left]=\"contentLeft + 'px'\">\n  <ng-content></ng-content>\n</div>",
                animations: [
                    trigger('scale', [
                        transition('* => visible', [
                            style({ transform: 'scale(0)', opacity: '0' }),
                            animate('240ms ease-out', style({ transform: 'scale(1)', opacity: '1' }))
                        ]),
                        transition('visible => hidden', [
                            style({ transform: 'scale(1)', opacity: '1' }),
                            animate('215ms ease-in', style({ transform: 'scale(0)', opacity: '0' }))
                        ]),
                        transition('visible => execute', [
                            style({ transform: 'scale(1)', opacity: '1' }),
                            animate('215ms 0.15s ease-in', style({ transform: 'scale(1.4)', opacity: '0' }))
                        ])
                    ]),
                    trigger('contentAnim', [
                        transition('void => *', [
                            style({ opacity: '0' }),
                            animate('100ms 240ms ease-out', style({ opacity: '1' }))
                        ])
                    ])
                ],
                styles: [":host{display:block;height:100vh;width:100vw;position:absolute;--fiv-color-feature:rgba(56, 128, 255, 0.97);--fiv-color-pulse:var(--ion-color-light);--fiv-color-icon:var(--fiv-color-feature, var(--ion-color-primary))}.backdrop{display:block;height:100vh;width:100vw;position:absolute}.circle{position:absolute;border-radius:100%;background:var(--fiv-color-feature);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.feature{border-radius:100%;background:var(--fiv-color-pulse)}.feature.center.pulse{-webkit-animation:1.4s infinite shadow-pulse;animation:1.4s infinite shadow-pulse}@-webkit-keyframes shadow-pulse{0%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 0 rgba(0,0,0,.24)}50%{transform:scale(1.1) translate(-45%,-45%)}100%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 28px transparent}}@keyframes shadow-pulse{0%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 0 rgba(0,0,0,.24)}50%{transform:scale(1.1) translate(-45%,-45%)}100%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 28px transparent}}.content{position:absolute}.center{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}"]
            }] }
];
/** @nocollapse */
FivFeatureDiscovery.ctorParameters = () => [
    { type: Renderer2 },
    { type: Platform }
];
FivFeatureDiscovery.propDecorators = {
    circle: [{ type: ViewChild, args: ['circle', { static: false },] }],
    rect: [{ type: ViewChild, args: ['rect', { static: false },] }],
    innerPulse: [{ type: ViewChild, args: ['pInner', { static: false, read: ElementRef },] }],
    outerPulse: [{ type: ViewChild, args: ['pOuter', { static: false },] }],
    fivClick: [{ type: Output }],
    fivBackdropClick: [{ type: Output }],
    fivClose: [{ type: Output }],
    fivOpen: [{ type: Output }],
    fivAnimation: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FivFeatureDiscovery.prototype.top;
    /** @type {?} */
    FivFeatureDiscovery.prototype.left;
    /** @type {?} */
    FivFeatureDiscovery.prototype.width;
    /** @type {?} */
    FivFeatureDiscovery.prototype.height;
    /** @type {?} */
    FivFeatureDiscovery.prototype.innerDiameter;
    /** @type {?} */
    FivFeatureDiscovery.prototype.featurePadding;
    /** @type {?} */
    FivFeatureDiscovery.prototype.contentTop;
    /** @type {?} */
    FivFeatureDiscovery.prototype.contentLeft;
    /** @type {?} */
    FivFeatureDiscovery.prototype.contentWidth;
    /** @type {?} */
    FivFeatureDiscovery.prototype.contentHeight;
    /** @type {?} */
    FivFeatureDiscovery.prototype.contentOffset;
    /** @type {?} */
    FivFeatureDiscovery.prototype.bounds;
    /** @type {?} */
    FivFeatureDiscovery.prototype.icon;
    /** @type {?} */
    FivFeatureDiscovery.prototype.circle;
    /** @type {?} */
    FivFeatureDiscovery.prototype.rect;
    /** @type {?} */
    FivFeatureDiscovery.prototype.innerPulse;
    /** @type {?} */
    FivFeatureDiscovery.prototype.outerPulse;
    /** @type {?} */
    FivFeatureDiscovery.prototype.animationState;
    /** @type {?} */
    FivFeatureDiscovery.prototype.pulse;
    /** @type {?} */
    FivFeatureDiscovery.prototype.fivClick;
    /** @type {?} */
    FivFeatureDiscovery.prototype.fivBackdropClick;
    /** @type {?} */
    FivFeatureDiscovery.prototype.fivClose;
    /** @type {?} */
    FivFeatureDiscovery.prototype.fivOpen;
    /** @type {?} */
    FivFeatureDiscovery.prototype.fivAnimation;
    /**
     * @type {?}
     * @private
     */
    FivFeatureDiscovery.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FivFeatureDiscovery.prototype.platform;
}
//# sourceMappingURL=data:application/json;base64,