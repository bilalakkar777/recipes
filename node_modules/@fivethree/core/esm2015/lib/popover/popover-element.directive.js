/**
 * @fileoverview added by tsickle
 * Generated from: lib/popover/popover-element.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivPopover } from './popover.component';
import { Directive, ElementRef, Input } from '@angular/core';
import { tap, delay } from 'rxjs/operators';
export class PopoverElementDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.delay = 50;
    }
    /**
     * @param {?} visible
     * @return {?}
     */
    set show(visible) {
        this._show = visible;
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.show) {
                this.fivPopover.open(this.el);
            }
            else if (this.fivPopover.overlay && this.fivPopover.overlay.open) {
                this.fivPopover.close();
            }
        }), 0);
    }
    /**
     * @return {?}
     */
    get show() {
        return this._show;
    }
    /**
     * @return {?}
     */
    open() {
        this.show = true;
    }
    /**
     * @return {?}
     */
    close() {
        this.show = false;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.fivPopover.overlay.afterInit
            .pipe(delay(this.delay), tap((/**
         * @return {?}
         */
        () => {
            this.show = this._show;
        })))
            .subscribe();
    }
}
PopoverElementDirective.decorators = [
    { type: Directive, args: [{
                selector: '[fivPopover]',
                exportAs: 'fivPopover'
            },] }
];
/** @nocollapse */
PopoverElementDirective.ctorParameters = () => [
    { type: ElementRef }
];
PopoverElementDirective.propDecorators = {
    delay: [{ type: Input, args: ['fivPopover.delay',] }],
    fivPopover: [{ type: Input }],
    show: [{ type: Input, args: ['fivPopover.show',] }]
};
if (false) {
    /** @type {?} */
    PopoverElementDirective.prototype._show;
    /** @type {?} */
    PopoverElementDirective.prototype.delay;
    /** @type {?} */
    PopoverElementDirective.prototype.fivPopover;
    /**
     * @type {?}
     * @private
     */
    PopoverElementDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1lbGVtZW50LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXZldGhyZWUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9wb3BvdmVyL3BvcG92ZXItZWxlbWVudC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBTTVDLE1BQU0sT0FBTyx1QkFBdUI7Ozs7SUFtQmxDLFlBQW9CLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBakJQLFVBQUssR0FBRyxFQUFFLENBQUM7SUFpQkQsQ0FBQzs7Ozs7SUFkdEMsSUFBOEIsSUFBSSxDQUFDLE9BQWdCO1FBQ2pELElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO1FBQ3JCLFVBQVU7OztRQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDYixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDL0I7aUJBQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUU7Z0JBQ2xFLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDekI7UUFDSCxDQUFDLEdBQUUsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDOzs7O0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFJRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQzs7OztJQUNELEtBQUs7UUFDSCxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7O0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVM7YUFDOUIsSUFBSSxDQUNILEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQ2pCLEdBQUc7OztRQUFDLEdBQUcsRUFBRTtZQUNQLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN6QixDQUFDLEVBQUMsQ0FDSDthQUNBLFNBQVMsRUFBRSxDQUFDO0lBQ2pCLENBQUM7OztZQXpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLFFBQVEsRUFBRSxZQUFZO2FBQ3ZCOzs7O1lBTm1CLFVBQVU7OztvQkFTM0IsS0FBSyxTQUFDLGtCQUFrQjt5QkFDeEIsS0FBSzttQkFFTCxLQUFLLFNBQUMsaUJBQWlCOzs7O0lBSnhCLHdDQUFlOztJQUNmLHdDQUFzQzs7SUFDdEMsNkNBQWdDOzs7OztJQWdCcEIscUNBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRml2UG9wb3ZlciB9IGZyb20gJy4vcG9wb3Zlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgQWZ0ZXJWaWV3SW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGFwLCBkZWxheSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2ZpdlBvcG92ZXJdJyxcbiAgZXhwb3J0QXM6ICdmaXZQb3BvdmVyJ1xufSlcbmV4cG9ydCBjbGFzcyBQb3BvdmVyRWxlbWVudERpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBfc2hvdzogYm9vbGVhbjtcbiAgQElucHV0KCdmaXZQb3BvdmVyLmRlbGF5JykgZGVsYXkgPSA1MDtcbiAgQElucHV0KCkgZml2UG9wb3ZlcjogRml2UG9wb3ZlcjtcblxuICBASW5wdXQoJ2ZpdlBvcG92ZXIuc2hvdycpIHNldCBzaG93KHZpc2libGU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9zaG93ID0gdmlzaWJsZTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGlmICh0aGlzLnNob3cpIHtcbiAgICAgICAgdGhpcy5maXZQb3BvdmVyLm9wZW4odGhpcy5lbCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZml2UG9wb3Zlci5vdmVybGF5ICYmIHRoaXMuZml2UG9wb3Zlci5vdmVybGF5Lm9wZW4pIHtcbiAgICAgICAgdGhpcy5maXZQb3BvdmVyLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSwgMCk7XG4gIH1cbiAgZ2V0IHNob3coKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3c7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5zaG93ID0gdHJ1ZTtcbiAgfVxuICBjbG9zZSgpIHtcbiAgICB0aGlzLnNob3cgPSBmYWxzZTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmZpdlBvcG92ZXIub3ZlcmxheS5hZnRlckluaXRcbiAgICAgIC5waXBlKFxuICAgICAgICBkZWxheSh0aGlzLmRlbGF5KSxcbiAgICAgICAgdGFwKCgpID0+IHtcbiAgICAgICAgICB0aGlzLnNob3cgPSB0aGlzLl9zaG93O1xuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=