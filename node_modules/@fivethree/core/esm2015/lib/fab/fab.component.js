/**
 * @fileoverview added by tsickle
 * Generated from: lib/fab/fab.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivFeatureDiscovery } from './../feature-discovery/feature-discovery.component';
import { FivLoadingProgressBar } from './../loading-progress-bar/loading-progress-bar.component';
import { Component, Input, ViewChild, Output, EventEmitter, Renderer2, ContentChild, TemplateRef, Optional } from '@angular/core';
import { animate, style, transition, trigger } from '@angular/animations';
import { FivSpinner } from '../spinner/spinner.component';
import { IonContent, IonLabel, Platform } from '@ionic/angular';
import { Subject } from 'rxjs';
import { takeUntil, tap, filter, repeat, map, pairwise, distinctUntilChanged } from 'rxjs/operators';
export class FivFab {
    /**
     * @param {?} renderer
     * @param {?} platform
     * @param {?} content
     */
    constructor(renderer, platform, content) {
        this.renderer = renderer;
        this.platform = platform;
        this.content = content;
        this.vertical = 'none';
        this.horizontal = 'none';
        this.mode = 'normal';
        this.spinColor = 'primary';
        this.disabled = false;
        this.visible = true;
        this.pulse = false;
        this._scroll = false;
        this.fivComplete = new EventEmitter();
        this.fivRefresh = new EventEmitter();
        this.fivHidden = new EventEmitter();
        this.fivShow = new EventEmitter();
        this.fivTransition = new EventEmitter();
        this.loading = false;
        this.extended = false;
        this.iconState = 'normal';
        this.currentDeltaY = 0;
        this.$onDestroy = new Subject();
    }
    /**
     * @param {?} scroll
     * @return {?}
     */
    set scroll(scroll) {
        this._scroll = scroll;
        this.$onDestroy.next();
        this.ngOnInit();
    }
    /**
     * @return {?}
     */
    get scroll() {
        return this._scroll;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this.content) {
            return;
        }
        if (!this.scroll) {
            return;
        }
        this.content.scrollEvents = true;
        /** @type {?} */
        const directionChange = this.content.ionScroll.pipe(map((/**
         * @param {?} ev
         * @return {?}
         */
        ev => ev.detail.deltaY)), pairwise(), map((/**
         * @param {?} __0
         * @return {?}
         */
        ([y1, y2]) => (y2 < y1 ? 'Up' : 'Down'))), distinctUntilChanged(), takeUntil(this.content.ionScrollEnd), repeat());
        /** @type {?} */
        const up = directionChange.pipe(filter((/**
         * @param {?} direction
         * @return {?}
         */
        direction => direction === 'Up')));
        /** @type {?} */
        const down = directionChange.pipe(filter((/**
         * @param {?} direction
         * @return {?}
         */
        direction => direction === 'Down')));
        up.pipe(tap((/**
         * @return {?}
         */
        () => this.labelComp ? (this.extended = true) : (this.visible = true))), takeUntil(this.$onDestroy)).subscribe();
        down
            .pipe(tap((/**
         * @return {?}
         */
        () => this.labelComp ? (this.extended = false) : (this.visible = false))), takeUntil(this.$onDestroy))
            .subscribe();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.$onDestroy.next();
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.extended = !!this.labelComp;
    }
    /**
     * @return {?}
     */
    load() {
        this.loading = true;
        this.fivRefresh.emit(this);
    }
    /**
     * @return {?}
     */
    unload() {
        if (this.bar) {
            this.bar.unload();
        }
        this.loading = false;
    }
    /**
     * @return {?}
     */
    complete() {
        if (this.loading) {
            if (this.spinner) {
                this.spinner.completeIn(1000);
            }
            else if (this.bar) {
                this.bar.complete();
            }
        }
    }
    /**
     * @return {?}
     */
    fillAnimationDone() {
        this.fivComplete.emit(this);
        this.unload();
    }
    /**
     * @param {?} progress
     * @return {?}
     */
    rotate(progress) {
        this.renderer.setStyle(this.spinner._elementRef.nativeElement, 'transform', `rotateZ(${(progress / 200) * 360}deg)`);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    fabAnimDone(event) {
        if (event.fromState === 'void') {
            this.fivShow.emit(this);
        }
        if (event.toState === 'void') {
            this.fivHidden.emit(this);
        }
    }
}
FivFab.decorators = [
    { type: Component, args: [{
                selector: 'fiv-fab',
                template: "<ion-fab *ngIf=\"visible\" (@fabAnim.done)=\"fabAnimDone($event)\" [@fabAnim]=\"horizontal\"\n  [ngClass]=\"[mode,horizontal,vertical]\" [slot]=\"slot\">\n  <fiv-spinner *ngIf=\"!extended && loading\" (fivProgress)=\"rotate($event)\" #spinner (fivComplete)=\"fillAnimationDone()\"\n    class=\"spinner\" [circleRadius]=\"30\" [diameter]=\"68\" [strokeWidth]=\"4\" [mode]=\"'indeterminate'\">\n  </fiv-spinner>\n\n  <ion-button [ngClass]=\"{'pulse': pulse, 'small':!labelComp || !extended}\" [color]=\"color\" [disabled]=\"disabled\">\n    <fiv-loading-progress-bar *ngIf=\"extended\" [loading]=\"loading\" (fivComplete)=\"fillAnimationDone()\" #bar>\n    </fiv-loading-progress-bar>\n    <ng-content select=\"fiv-icon\"></ng-content>\n    <ng-content select=\"ion-icon\"></ng-content>\n    <div [@labelAnim] *ngIf=\"labelComp && extended\">\n      <ng-content select=\"ion-label\"></ng-content>\n    </div>\n  </ion-button>\n</ion-fab>",
                animations: [
                    trigger('fabAnim', [
                        transition('void => center', [
                            style({
                                transform: 'translateX(-50%) scale(0) '
                            }),
                            animate('250ms ease', style({ transform: 'translateX(-50%) scale(1)' }))
                        ]),
                        transition('center => void', [
                            style({
                                transform: 'translateX(-50%) scale(1) '
                            }),
                            animate('250ms ease', style({ transform: ' translateX(-50%) scale(0)' }))
                        ]),
                        transition('void => *', [
                            style({
                                transform: 'scale(0)'
                            }),
                            animate('250ms ease', style({
                                transform: 'scale(1)'
                            }))
                        ]),
                        transition('* => void', [
                            style({
                                transform: 'scale(1)'
                            }),
                            animate('250ms ease', style({
                                transform: 'scale(0)'
                            }))
                        ])
                    ]),
                    trigger('labelAnim', [
                        transition('void => *', [
                            style({ width: '0', opacity: 0 }),
                            animate('140ms', style({ width: '*', opacity: 1 }))
                        ]),
                        transition('* => void', [
                            style({ width: '*', opacity: 1 }),
                            animate('120ms', style({ width: 0, opacity: 0 }))
                        ])
                    ])
                ],
                styles: [":host{--fiv-fab-size:56px;--fiv-spinner-size:calc(var(--fiv-fab-size) + 12px);--fiv-fab-bottom:calc(10px + env(safe-area-inset-bottom));--fiv-fab-top:calc(10px + env(safe-area-inset-top));--background-fab-progress-bar:var(--ion-color-primary);--background-fab-progress:var(--ion-color-primary-shade)}fiv-loading-progress-bar{--background-progress-bar:var(--background-fab-progress-bar);--background-progress:var(--background-fab-progress)}:host(.button-disabled){pointer-events:none}::ng-deep ng-deep fiv-icon.ios{--fiv-icon-height:24px;--fiv-icon-width:24px}::ng-deep fiv-icon:not(.ios){--fiv-icon-height:25px;--fiv-icon-width:25px}ion-button{--border-radius:calc(var(--fiv-fab-size) / 2);height:var(--fiv-fab-size);min-width:var(--fiv-fab-size);-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;margin:0}ion-fab.top{top:var(--fiv-fab-top)}ion-fab.top.edge{top:calc(var(--fiv-fab-top) - 38px)}ion-fab.middle{top:calc(50% - var(--fiv-spinner-size))}ion-fab.bottom.edge{bottom:calc(var(--fiv-fab-bottom) - 38px)}ion-fab.bottom{bottom:var(--fiv-fab-bottom)}ion-fab.center{left:50%;transform:translateX(-50%)}ion-fab.start{left:10px}ion-fab.end{right:calc(10px + var(--ion-safe-area-right,0px))}.pulse{-webkit-animation:1.2s infinite shadow-pulse;animation:1.2s infinite shadow-pulse}fiv-spinner{position:absolute;left:calc((var(--fiv-spinner-size) - var(--fiv-fab-size))/ -2);top:calc((var(--fiv-spinner-size) - var(--fiv-fab-size))/ -2)}@-webkit-keyframes shadow-pulse{0%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 28px transparent}}@keyframes shadow-pulse{0%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 28px transparent}}"]
            }] }
];
/** @nocollapse */
FivFab.ctorParameters = () => [
    { type: Renderer2 },
    { type: Platform },
    { type: IonContent, decorators: [{ type: Optional }] }
];
FivFab.propDecorators = {
    vertical: [{ type: Input }],
    horizontal: [{ type: Input }],
    mode: [{ type: Input }],
    slot: [{ type: Input }],
    spinColor: [{ type: Input }],
    color: [{ type: Input }],
    disabled: [{ type: Input }],
    visible: [{ type: Input }],
    pulse: [{ type: Input }],
    scroll: [{ type: Input }],
    feature: [{ type: Input }],
    fivComplete: [{ type: Output }],
    fivRefresh: [{ type: Output }],
    fivHidden: [{ type: Output }],
    fivShow: [{ type: Output }],
    fivTransition: [{ type: Output }],
    spinner: [{ type: ViewChild, args: ['spinner', { static: false },] }],
    featureDiscovery: [{ type: ViewChild, args: ['feature', { static: false },] }],
    bar: [{ type: ViewChild, args: ['bar', { static: false },] }],
    labelComp: [{ type: ContentChild, args: [IonLabel, { static: false },] }]
};
if (false) {
    /** @type {?} */
    FivFab.prototype.vertical;
    /** @type {?} */
    FivFab.prototype.horizontal;
    /** @type {?} */
    FivFab.prototype.mode;
    /** @type {?} */
    FivFab.prototype.slot;
    /** @type {?} */
    FivFab.prototype.spinColor;
    /** @type {?} */
    FivFab.prototype.color;
    /** @type {?} */
    FivFab.prototype.disabled;
    /** @type {?} */
    FivFab.prototype.visible;
    /** @type {?} */
    FivFab.prototype.pulse;
    /** @type {?} */
    FivFab.prototype._scroll;
    /** @type {?} */
    FivFab.prototype.feature;
    /** @type {?} */
    FivFab.prototype.fivComplete;
    /** @type {?} */
    FivFab.prototype.fivRefresh;
    /** @type {?} */
    FivFab.prototype.fivHidden;
    /** @type {?} */
    FivFab.prototype.fivShow;
    /** @type {?} */
    FivFab.prototype.fivTransition;
    /** @type {?} */
    FivFab.prototype.spinner;
    /** @type {?} */
    FivFab.prototype.featureDiscovery;
    /** @type {?} */
    FivFab.prototype.bar;
    /** @type {?} */
    FivFab.prototype.labelComp;
    /** @type {?} */
    FivFab.prototype.loading;
    /** @type {?} */
    FivFab.prototype.extended;
    /** @type {?} */
    FivFab.prototype.iconState;
    /** @type {?} */
    FivFab.prototype.currentDeltaY;
    /** @type {?} */
    FivFab.prototype.$onDestroy;
    /**
     * @type {?}
     * @private
     */
    FivFab.prototype.renderer;
    /** @type {?} */
    FivFab.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    FivFab.prototype.content;
}
/**
 * @record
 */
export function FabTransitionEvent() { }
if (false) {
    /** @type {?} */
    FabTransitionEvent.prototype.from;
    /** @type {?} */
    FabTransitionEvent.prototype.to;
}
/** @enum {number} */
const FabState = {
    HIDDEN: 0,
    NORMAL: 1,
    EXTENDED: 2,
};
export { FabState };
FabState[FabState.HIDDEN] = 'HIDDEN';
FabState[FabState.NORMAL] = 'NORMAL';
FabState[FabState.EXTENDED] = 'EXTENDED';
//# sourceMappingURL=data:application/json;base64,